par(mfrow = c(1, 2), mar=c(2,2,2,2))
map(database = 'world', region = c('South Korea', 'North Korea'))
title("Korea : maps packages")
# Korea using mapdata package
map(database = 'worldHires', region = c('South Korea', 'North Korea'))
title("Korea : mapdata packages")
# China with large city
par(mfrow = c(1, 1), mar=c(2,2,2,2))
map("worldHires", "China")
map.cities(country = "China", capitals = 3, minpop = 3500000, maxpop = 5000000)
title("capitals=3, minpop=3500000, maxpop=5000000")
# Using mapdata package
# Korea, Japan, China (Textbook : R Visualization)
par(mfrow = c(1, 1), mar=c(2,2,2,2))
map('worldHires', region=c('South Korea', 'North Korea', 'Japan', 'China'))
map('worldHires', region=c('South Korea'), col = 'blue', add = TRUE, fill = TRUE)
map('worldHires', region=c('North Korea'), col = 'coral', add = TRUE, fill = TRUE)
map('worldHires', region=c('Japan'), col = 'grey',add = TRUE, fill = TRUE)
map('worldHires', region=c('China'), col = 'yellow',add = TRUE, fill = TRUE)
# Dokdo map using mapproj package
library(mapproj)
# for reading Korean : encoding to UTF-8
# file menu: Tools_global options_code_saving
map('worldHires', proj = 'azequalarea', orient = c(37.24223, 131.8643, 0))
map.grid(col = 2)
points(mapproject(list(y = 37.24223, x = 131.8643)), col = "blue", pch = "x", cex = 2)
title("독도")
# Assault in US (1973)
par(mfrow = c(1, 1), mar=c(1,1,1,1))
# library(maps)
# excluding Alaska, Hawaii
sub.usa <- subset(USArrests,!rownames(USArrests) %in% c("Alaska", "Hawaii"))
# data with State name, Assult count
usa.data <- data.frame(states = rownames(sub.usa), Assault = sub.usa$Assault)
# legend
col.level <- cut(sub.usa[, 2], c(0, 100, 150, 200, 250, 300, 350))
legends <- levels(col.level)
# displaying color for the size
levels(col.level) <- sort(heat.colors(6), decreasing = TRUE)
usa.data <- data.frame(usa.data, col.level = col.level)
# Map
map('state', region = usa.data$states, fill = TRUE, col = as.character(usa.data$col.level))
title("USA Assault map")
legend(-77, 34, legends, fill = sort(heat.colors(6), decreasing = TRUE), cex = 0.7)
par(mfrow=c(1,1), mar=c(2,2,2,2))
map("state","Texas")
data(us.cities)
map.cities(us.cities,country="TX")
setwd("D:/R_project/Education/week6_1")
# practice data
dat1<-read.csv(file="data1.csv")
# practice data
dat1<-read.csv(file="data1.csv")
dat2<-read.csv(file="data2.csv")
# data merging
dat12<-merge(dat1, dat2, by="ID")
View(dat12)
data12 <- merge(dat1, dat2, by="ID")
# add more data (combine in a row)
dat3<-read.csv(file="data3.csv")
View(dat3)
dat123<-rbind(dat12, dat3)
View(dat123)
dat123
# data sorting
dats1<-dat12[order(dat12$age),]
dats1
dats2<-dat12[order(dat12$gender, dat12$age), ]
dats2
# data subset (selecting data)
#newdat<-dat12[which(dat12$gender=="F" & dat12$age>15),]
newdat<-subset(dat12, dat12$gender=="F" & dat12$age>15)
newdat
exdat <- dat12[!names(dat12) %in% c("age", "gender")]
source('D:/R_project/Education/week6_1/lec6_1.R', echo=TRUE)
exdat
setwd("D:/R_project/Education/week6_2")
stud<-read.csv("stud_math.csv")
View(stud)
# descriptive statistics using "psych" package
install.packages("psych")
library(psych)
head(stud)
dim(stud)
str(stud)
attach(stud)
# 1-1 Numeriacl analytics
summary(stud)
mean(G3)
sd(G3)
sqrt(var(G3))
# creating interested variable list
vars<-c("G1", "G2", "G3")
head(stud[vars])
summary(stud[vars])
# sapply function
sapply(stud[vars], mean)
# require "psych" for "describe" function
describe(stud[vars])
sapply(stud[vars], sd)
# categorical data
table(health)
health_freq<-table(health)
names(health_freq) <- c ("very bad", "bad", "average", "good",
"very good")
barplot(health_freq, col=3)
# 2*2 contingency table
table(health,studytime)
# 1. histogram with color and title, legend
par(mfrow=c(2,2))
hist(G1, breaks = 10, col = "lightblue", main="Histogram of Grade 1" )
hist(G2, breaks = 10, col = "green", main="Histogram of Grade 2" )
hist(G3, breaks = 10, col = "coral", main="Histogram of Grade 3" )
# 1. histogram with color and title, legend
par(mfrow=c(2,2))
hist(G1, breaks = 10, col = "lightblue", main="Histogram of Grade 1" )
hist(G2, breaks = 10, col = "green", main="Histogram of Grade 2" )
hist(G3, breaks = 10, col = "coral", main="Histogram of Grade 3" )
attach(stud)
# 1. histogram with color and title, legend
par(mfrow=c(2,2))
hist(G1, breaks = 10, col = "lightblue", main="Histogram of Grade 1" )
# 1. histogram with color and title, legend
par(mfrow=c(2,2))
hist(G1, breaks = 10, col = "lightblue", main="Histogram of Grade 1" )
hist(G2, breaks = 10, col = "green", main="Histogram of Grade 2" )
hist(G3, breaks = 10, col = "coral", main="Histogram of Grade 3" )
# 2. boxplot
par(mfrow=c(1,2))
boxplot(G3~address, boxwex = 0.5, col = c("yellow", "coral"), main="G3 by (Urban, Rural)")
boxplot(G3~traveltime, boxwex = 0.5, col = c("red","orange","yellow","green"), main="G3 by traveltime")
# boxplot
par(mfrow=c(1,2))
# academic achievement by freetime
# 1 - very low to 5 - very high
boxplot(G3~freetime, boxwex = 0.5, col = c("yellow", "green", "blue","grey","red"),main="G3 by freetime")
# academic achievement by studytime
# 1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours
boxplot(G3~studytime, boxwex = 0.5, col = c("yellow", "blue","grey","red"), main="G3 by studytime")
# 3. xyplot : lattice package
library(lattice)
xyplot(G3 ~ traveltime | sex , data = stud, pch=16, main = "G3 ~ traveltime | sex ")
# data (G3=0)
s1<-subset(stud, G3==0)
View(s1)
# 4. scatterplot : ggplot2 package
library(ggplot2)
# scatterplot for G1 and G3 by sex
ggplot(stud, aes(x=G1, y=G3, color=sex, shape=sex)) +
geom_point(size=2)
# 5. bar chart : ggplot2 package
# bar chart for romantic by sex
ggplot(data=stud, aes(factor(romantic)))+
geom_bar(aes(fill=factor(sex)), width=.4, colour="black")+
ggtitle("Romantic by sex")
# bar chart for internet use by (Urban, Rural)
ggplot(data=stud, aes(factor(internet)))+
geom_bar(aes(fill=factor(address)), width=.4, colour="black")+
ggtitle("Internet use by (Urban, Rural)")
# 6. pariwise plot
# new variable lists
vars1<-c("G1", "G2", "G3")
# pariwise plot
pairs(stud[vars1], main = "Student Math Data",pch = 21, bg = c ("red","green3"))
par(mfrow=c(1,2))
View(stud)
# academic achievement by freetime
# 1 - very low to 5 - very high
boxplot(G3~health, boxwex = 0.5, col = c("yellow", "green", "blue","grey","red"),main="G3 by freetime")
setwd("D:/R_project/Education/week6_4")
stud<-read.csv("stud_math.csv")
stud<-read.csv("stud_math.csv")
head(stud)
dim(stud)
str(stud)
attach(stud)
# 1-2 Testing for normality
# multiple plot (2 by 2)
par(mfrow=c(2,2))
#Quantile plot
qqnorm(G1)
qqline(G1, col = 2, cex=7)
qqnorm(G2)
qqline(G2, col = 2, cex=7)
qqnorm(G3)
qqline(G3, col = 2, cex=7)
(G3)
#Anderson-Darling test require installing package "nortest"
install.packages('nortest')
library(nortest)
#Shapiro-Wilks test
shapiro.test(G3)
ad.test(G3)
# data simulation
# Simulation examples
runif(5,min=1,max=5)
rnorm(5,mean=5,sd=1)
rgamma(5,shape=3,rate=2)
rbinom(5,size=100,prob=.2)
# from normal distribution
x<-rnorm(1000)
plot(density(x),xlim=c(-5,10))
# confidence interval of normal distribution
nreps <- 100
ll <- numeric(nreps)
ul <- numeric(nreps)
n <- 100
mu <- 500
sigma <- 100
for(i in 1:nreps) {
set.seed(i)
x <- rnorm(n, mu, sigma)
ll[i] <- mean(x) - qnorm(0.975)*sqrt(sigma^2/n)
ul[i] <- mean(x) + qnorm(0.975)*sqrt(sigma^2/n)
}
# Draw 95% confidence interval
par(mfrow=c(1,1))
plot(1:100, ylim=c(min(ll), max(ul)),
ylab="95% Confidence Interval", xlab="iterations")
for(i in 1:100) lines(c(i, i), c(ll[i], ul[i]))
abline(h=mu, col="red", lty=2, lwd=3)
setwd("D:/R_project/Education/week7_1")
### student math grade data ####
stud<-read.csv("stud_math.csv")
head(stud)
dim(stud)
str(stud)
attach(stud)
# 1. single t-test : to test whether or not mean of G3 is 10
t.test(G3, mu=10)
# 1. single t-test : to test whether or not mean of G3 is 10
t.test(G3, mu=10)
# 2. two sample t-test
## example 1
# to test whether or not mean of G3 is same between Urban and Rural
t.test(G3~address, data=stud)
boxplot(G3~address, boxwex = 0.5, col = c("yellow", "coral"))
# alternative H : mu(Rural)< mu(Urban)
t.test(G3~address, data=stud, alternative = c("less"))
help(t.test)
## example 2
# to test whether or not mean of G3 is equal for activities
t.test(G3~activities, data=stud)
boxplot(G3~activities, boxwex = 0.5, col = c("blue", "red"))
# wilcox.test(G3, mu=10)
wilcox.test(G3~address)
help(wilcox.test)
t.test(G3~internet, data=stud)
setwd("D:/R_project/Education/week7_2")
## example 1: blood pressure data
bp<-read.csv("bp.csv")
attach(bp)
View(bp)
str(bp)
# paired t-test (two-sided)
t.test(bp_pre, bp_post, mu=0,  paired=T)
# paired t-test (one-sided)
t.test(bp_pre, bp_post, mu=0, alternative="greater", paired=T)
# paired t-test (two-sided, 90% confidence interval)
t.test(bp_pre, bp_post, mu=0, alternative="two.sided", paired=T, conf.level=.90)
## example 2: Very Low-calroie diet
diet<-read.csv("weight.csv")
attach(diet)
# paired t-test (default=two-sided, 95% confidence interval)
t.test(wt_pre, wt_post, mu=0,  paired=T)
# to get 90% confidence interval in paired t-test
t.test(wt_pre, wt_post, mu=0, alternative="two.sided", paired=T, conf.level=.90)
# to get 90% confidence interval in paired t-test
t.test(wt_pre, wt_post, mu=0, alternative="two.sided", paired=T, conf.level=.90)
diet <- read.csv("weight.csv")
t.test(diet$wt_pre, diet$wt_post, mu=0, paired=T)
t.test(diet$wt_pre, diet$wt_post, alternative="greater", mu=0, paired=T)
t.test(diet$wt_pre, diet$wt_post, alternative="less", mu=0, paired=T)
setwd("D:/R_project/Education/week7_3")
### student math grade data ####
stud<-read.csv("stud_math.csv")
head(stud)
dim(stud)
str(stud)
attach(stud)
# boxplot in lec6_3.R
par(mfrow=c(1,2))
boxplot(G3~address, boxwex = 0.5, col = c("yellow", "coral"), main="G3 by (Urban, Rural)")
boxplot(G3~traveltime, boxwex = 0.5, col = c("red","orange","yellow","green"), main="G3 by traveltime")
# 1. ANOVA by address
a1 <- aov(G3~address)
summary(a1)
# tapply - give FUN value by address
round(tapply(G3, address, mean),2)
# 2. ANOVA by traveltime
traveltime<-as.factor(traveltime)
a2 <- aov(G3~traveltime)
summary(a2)
# tapply - give FUN value by address
round(tapply(G3, traveltime, mean),2)
a2 <- aov(G3~traveltime)
summary(a2)
# should be foctor for Tukey's Honest Significant Difference test
TukeyHSD(a2, "traveltime", ordered=TRUE)
plot(TukeyHSD(a2, "traveltime"))
# 4. ANOVA by romantic
a4 <- aov(G3~romantic)
summary(a4)
# tapply - give FUN value by address
round(tapply(G3,romantic, mean),2)
# boxplot
boxplot(G3~romantic, boxwex = 0.5, col = c("yellow", "coral"), main="G3 by romantic")
# posthoc analysis
TukeyHSD(a4, "romantic", ordered=TRUE)
aa <- aov(G3~studytime)
summary(aa)
boxplot(G3~studytime, boxwex = 0.5, col = c("yellow","coral","blue","orange","green"))
View(stud)
str(stud)
aa <- aov(G3~as.factor(studytime))
summary(aa)
round(tapply(G3,as.factor(studytime), sd),2)
G3
G33 <- G3!=0
G33
G33 <- G3[G3!=0]
G33
round(tapply(G33,as.factor(studytime), sd),2)
stud$G33 <- stud$G3[stud$G3!=0]
G33 <- stud$G3[stud$G3!=0]
G33
stud$G3 <- stud$G3[stud$G3!=0]
G33 <- subset(G3[G3!=0])
G33 <- subset(G3[] != 0)
G33 <- subset(stud$G3 != 0)
G33 <- subset(stud, stud$G3 != 0)
round(tapply(G33,as.factor(studytime), sd),2)
round(tapply(G33,as.factor(G33$studytime), sd),2)
round(tapply(G33$G3,as.factor(G33$studytime), sd),2)
dat<-read.csv(file="chol_ex.csv")
head(dat)
setwd("D:/R_project/Education/week7_4")
dat<-read.csv(file="chol_ex.csv")
View(dat)
head(dat)
dim(dat)
str(dat)
attach(dat)
# two-way ANOVA,
a6 <- aov(value ~ drug + age)
summary(a6)
# two-way ANOVA with interaction
a7 <- aov(value ~ drug + age+ drug*age)
summary(a7)
# post-hoc analysis Tukey
posthoc <- TukeyHSD(a6, 'drug', conf.level=0.95)
posthoc
# two-way ANOVA
par(mfrow=c(1,2))
boxplot(value ~ drug, boxwex = 0.7, main="HDL by drug dose", col = c("yellow","orange", "green"))
boxplot(value ~ age, boxwex = 0.5, main="HDL by Age", col = c("blue", "coral"))
# tapply - give FUN value by drug
round(tapply(value, drug, mean),2)
# tapply - give FUN value by age
round(tapply(value, age, mean),2)
# interaction plot
par(mfrow=c(1,2))
interaction.plot(drug, age, value)
interaction.plot(age, drug, value)
# Create an interaction plot for the HDL data
par(mfrow=c(1,2))
interaction.plot(dat$drug, dat$age, dat$value)
interaction.plot(dat$age, dat$drug, dat$value)
# interaction plot
par(mfrow=c(1,2))
interaction.plot(drug, age, value)
interaction.plot(age, drug, value)
setwd("D:/R_project/Education/week7_3")
stud <- read.csv("stud_math.csv")
a2 <- aov(G3~stud$studytime+stud$sex)
summary(a2)
boxplot(G3~sex, boxwex = 0.5, col = c("yellow", "coral"))
setwd("D:/R_project/Education/week8_1")
View(a2)
# autompg data
car<-read.csv("autompg.csv")
# subset of car : cyl (4,6,8)
car1<-subset(car, cyl==4 | cyl==6 | cyl==8)
attach(car1)
#correlation
cor(wt, mpg)
cor(disp, mpg)
cor(accler, mpg)
# 6. pariwise plot
# new variable lists
vars1<-c("disp", "wt", "accler", "mpg")
# pariwise plot
pairs(car1[vars1], main ="Autompg",cex=1, col=as.integer(car1$cyl),pch =substring((car1$cyl),1,1))
## Watch out!!
## Monkey data
monkey<-read.csv("monkey.csv")
head(monkey)
dim(monkey)
attach(monkey)
# correlation coefficients
cor(height, weight)
# scatterplot for weight and height
par(mfrow=c(1, 1))
plot(height, weight, pch=16, col=3,main="Monkey data")
# add the best fit linear line (lec4_3.R)
abline(lm(weight~height), col="blue", lwd=2, lty=1)
# linear model and summary of linear model
m1<-lm(weight~height)
summary(m1)
## Monkey data + Kingkong
monkey1<-read.csv("monkey_k.csv")
head(monkey1)
dim(monkey1)
attach(monkey1)
# correlation coefficients
cor(height, weight)
# scatterplot for weight and height
par(mfrow=c(1, 1))
plot(height, weight, pch=16, col=3,main="Monkey data")
# add the best fit linear line (lec4_3.R)
abline(lm(weight~height), col="red", lwd=2, lty=1)
# linear model and summary of linear model for monkey+king kong
m2<-lm(weight~height)
summary(m2)
# autompg data
car<-read.csv("autompg.csv")
head(car)
str(car)
# subset with cyl=4,6,8
car1<-subset(car, cyl==4 | cyl==6 | cyl==8)
attach(car1)
# 1. simple Regression(independent variable : wt)
r1<-lm(mpg~wt, data=car1)
summary(r1)
# (lec4_3.R) scatterplot with best fit lines
par(mfrow=c(1,1))
plot(wt, mpg,  col=as.integer(car1$cyl), pch=19)
# best fit linear line
abline(lm(mpg~wt), col="red", lwd=2, lty=1)
# 2. simple Regression(independent variable : disp)
r2<-lm(mpg~disp, data=car1)
summary(r2)
anova(r2)
# residual diagnostic plot
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(r2)
# 3. multiple Regression
r3<-lm(mpg~wt+accler, data=car1)
summary(r3)
# pariwise plot
pairs(car[, 1:6],cex=1, col=as.integer(car$cyl),pch =substring((car$cyl),1,1))
46.6-0.0077*4000
# 3. multiple Regression
r3<-lm(mpg~wt+accler, data=car1)
summary(r3)
setwd("D:/R_project/Education/week8_3")
# Natural language processing
install.packages('NLP')
# text mining package
install.packages('tm')
# visualizing
install.packages('wordcloud')
# color displaying
install.packages('RColorBrewer')
# set library (set in order)
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
# 20 new articles from Reuter- 21578 data set
data(crude)
View(crude)
# To know abour crude data
help(crude)
crude
str(crude)# remove punctuation in documnet
install.packages("KoNLP")
install.packages("KoNLP")
library(KoNLP)
library(KoNLP)
crude[[1]]
# remove punctuation in documnet
crude<-tm_map(crude, removePunctuation)
# set library (set in order)
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
# remove punctuation in documnet
crude<-tm_map(crude, removePunctuation)
# remove stopwords
crude<-tm_map(crude, removeNumbers)
crude<-tm_map(crude, function(x) removeWords(x,stopwords()))
stopwords()
# from frequency counts
tdm<-TermDocumentMatrix(crude)
m<-as.matrix(tdm)
v<-sort(rowSums(m), decreasing=TRUE)
d<-data.frame(word=names(v), freq=v)
# plot a word cloud
# to see detail help(wordcloud)
par(mfrow=c(1, 1))
wordcloud(d$word, d$freq, random.order=FALSE)
help(wordcloud)
str(crude[[1]])
context(crude[[1]])
content(crude[[1]])
meta(crude[[1]])
inspect(crude)
lapply(crude, content)
stopwords()
stopwords("SMART")
